<?php
/*
	this is php shim for accepting submissions
	replaces post.html if admin/php/enabled
*/

function WriteLog($text) { // writes to debug log if enabled
	if (0) {
		print (htmlspecialchars($text) . "<br>\n");
	}
}

function GetHtmlComment($comment) { // returns comment with basic html wrapper
	WriteLog('GetHtmlComment()');
	WriteLog('$comment = ' . $comment);
	
	$commentHtml = '<html><body>' . $comment . '</body></html>';
	
	WriteLog('$commentHtml = ' . $commentHtml);
	
	return $commentHtml;
}
	
function ProcessNewComment($comment) { // saves new comment to .txt file and calls indexer
	$hash = ''; // hash of new comment's contents
	$fileUrlPath = ''; // path file should be stored in based on $hash

	WriteLog('ProcessNewComment(...)');

	if (isset($comment) && $comment) {
		WriteLog('ProcessNewComment: $comment exists');

		$pwd = getcwd();
		
		WriteLog('$pwd = ' . $pwd);
		
		$scriptDir = substr($pwd, 0, strlen($pwd) - 5); // trim html/
		
		WriteLog('$scriptDir = ' . $scriptDir);
		
		$txtDir = $pwd . '/txt/';
		
		WriteLog('$txtDir = ' . $txtDir);
		
		$htmlDir = $pwd . '/';
		
		WriteLog('$htmlDir = ' . $htmlDir);
		
		$hash = sha1($comment);
		
		WriteLog('$comment = ' . $comment); 
		WriteLog('$hash = ' . $hash);
		
		$fileName = './txt/' . $hash . '.txt';
		
		WriteLog('$fileName = ' . $fileName);
		
		file_put_contents($fileName . '.tmp', $comment);

		rename($fileName . '.tmp', $fileName);
		
		WriteLog('ProcessNewComment: file_get_contents(' . $fileName . '):');
		WriteLog(file_get_contents($fileName));
		
//		$gitOutput = `sha1sum "$fileName"`;
//
//		WriteLog('ProcessNewComment: $gitOutput = ' . $gitOutput);
//
//		$gitOutput = explode(' ', trim($gitOutput));
//
//		$hash = trim($gitOutput[0]);

        $hash = sha1_file($fileName);
		
		WriteLog('ProcessNewComment: $hash = ' . $hash);

		{ // create prefix subdirectories under txt/
			if (!file_exists($txtDir . substr($hash, 0, 2))) {
				mkdir($txtDir . substr($hash, 0, 2));
			}

			if (!file_exists($txtDir . substr($hash, 0, 2) . '/' . substr($hash, 2, 2))) {
				mkdir($txtDir . substr($hash, 0, 2) . '/' . substr($hash, 2, 2));
			}
		}

		{ // create prefix subdirectories under ./ (html/)
			if (!file_exists('./' .substr($hash, 0, 2))) {
				mkdir('./' . substr($hash, 0, 2));
			}

			if (!file_exists('./' . substr($hash, 0, 2) . '/' . substr($hash, 2, 2))) {
				mkdir('./' . substr($hash, 0, 2) . '/' . substr($hash, 2, 2));
			}
		}

		// generate path for new txt file
		$filePath = 
			$txtDir . 
			substr($hash, 0, 2) . 
			'/' . 
			substr($hash, 2, 2) . 
			'/' . 
			$hash . '.txt'
		;

		// generate path for new html file
		$fileHtmlPath = 
			'./' .
			substr($hash, 0, 2) . 
			'/' . 
			substr($hash, 2, 2) . 
			'/' . 
			$hash . '.html'
		;

		// generate path for client-side path to html file
		$fileUrlPath = 
			'/' .
			substr($hash, 0, 2) . 
			'/' . 
			substr($hash, 2, 2) . 
			'/' . 
			$hash . '.html'
		;

		// save new post to txt file
		file_put_contents($filePath, $comment);

		// escape comment for output as html
		$commentHtml =
			nl2br(
				str_replace(
					'  ',
					' &nbsp;',
					htmlspecialchars(
						wordwrap(
							trim($comment),
							80,
							' ',
							true
						),
						ENT_QUOTES|ENT_SUBSTITUTE,
						"UTF-8"
					)
				)
			)
		;

//		$newPage = '<html><body>';
//		$newPage .=	'<p>' . $commentHtml . '</p>';
//		$newPage .=	'<p>Address: '. $fileUrlPath . '<br>';
//		$newPage .=	'Hash: ' . $hash . '<br><br>';
//		$newPage .=	'<p>This page should be replaced with a formatted version soon.</p>';
//		$newPage .=	'</body></html>';
//
//		file_put_contents($fileHtmlPath, $newPage);
//
//		exec('cd "' . $scriptDir . '" ; perl ./pages.pl "' . $hash . '"');
//
		if (!file_exists($scriptDir . 'cron.lock')) {
			WriteLog('cron.lock no exist, trying index.pl');

			if (file_exists($scriptDir . '/index.pl')) {
				WriteLog('index.pl found, calling');

				WriteLog(`cd "$scriptDir" ; perl ./index.pl "$filePath"`);
			}
			
			if (file_exists($scriptDir . '/touched.pl')) {
				WriteLog('touched.pl found, calling');

				WriteLog(`cd "$scriptDir" ; perl ./touched.pl`);
			}
		} else {

		}
		
		if (isset($_SERVER['HTTP_REFERER']) && $_SERVER['HTTP_REFERER']) {
			$referer = $_SERVER['HTTP_REFERER'];
			
	//		header('Location: ' . $referer);
		} else {
	//		header('Location: /write.html');
		}
		
		WriteLog(' $fileUrlPath = ' . $fileUrlPath);
	}

	if ($pwd) {
		WriteLog(`cd $pwd`);
	}
	
	return $fileUrlPath;
}

$fileUrlPath = '';

if ($_POST) {
	WriteLog('$_POST');
	if (isset($_POST['comment'])) {
		$comment = $_POST['comment'];
	}
	
	if (isset($_POST['replyto']) && $_POST['replyto']) {
		$replyTo = $_POST['replyto']; 
		$replyToToken = '>>' . $replyTo;
		
		$comment .= "\n\n" . $replyToToken;
	}

	if ($comment) {
		$fileUrlPath = ProcessNewComment($comment);
	}
}

if ($_GET) {
	WriteLog('$_GET');
	if (isset($_GET['comment'])) {
		$comment = $_GET['comment'];
	} else {
		$comment = '';
	}
	
	if (isset($_GET['replyto']) && $_GET['replyto']) {
		$replyTo = $_GET['replyto']; 
		$replyToToken = '>>' . $replyTo;

		$comment .= "\n\n" . $replyToToken;
	}

	if ($comment) {
		$fileUrlPath = ProcessNewComment($comment);
	}
}
		
$html = file_get_contents('post.html');

if (isset($fileUrlPath) && $fileUrlPath) {
	if (file_exists('../config/template/php/just_posted.template')) {
		$postedMessage = file_get_contents('../config/template/php/just_posted.template');
	} elseif (file_exists('../default/template/php/just_posted.template')) {
		copy ('../default/template/php/just_posted.template', '../config/template/php/just_posted.template');
		$postedMessage = file_get_contents('../default/template/php/just_posted.template');
	} else {
		$postedMessage = '<a href="' . $fileUrlPath . '" class=beginner>See what you just posted.</a><br><br>';
	}

	$postedMessage = str_replace('$fileUrlPath', $fileUrlPath, $postedMessage); 
	
	$html = str_replace('<!-- submitted_text -->', $postedMessage, $html);
}

print($html);
