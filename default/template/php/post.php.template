<?php
/*
	this is php shim for accepting submissions
	replaces post.html if admin/php/enabled
*/

function WriteLog($text) { // writes to debug log if enabled
	if (0) { // use this to toggle output
		print (htmlspecialchars($text) . "<br>\n");
	}
}

function ProcessNewComment($comment) { // saves new comment to .txt file and calls indexer
	$hash = ''; // hash of new comment's contents
	$fileUrlPath = ''; // path file should be stored in based on $hash

	WriteLog('ProcessNewComment(...)');

	if (isset($comment) && $comment) {
		WriteLog('ProcessNewComment: $comment exists');

		$pwd = getcwd();
		
		WriteLog('$pwd = ' . $pwd);
		
		$scriptDir = substr($pwd, 0, strlen($pwd) - 5); // trim html/
		
		WriteLog('$scriptDir = ' . $scriptDir);

		// $txtDir
		$txtDir = $pwd . '/txt/';
		
		WriteLog('$txtDir = ' . $txtDir);

		// $htmlDir
		$htmlDir = $pwd . '/';
		
		WriteLog('$htmlDir = ' . $htmlDir);
		
		$hash = sha1($comment);
		
		WriteLog('$comment = ' . $comment); 
		WriteLog('$hash = ' . $hash);
		
		$fileName = $txtDir . $hash . '.txt';
		
		WriteLog('$fileName = ' . $fileName);
		
		file_put_contents($fileName . '.tmp', $comment);

		rename($fileName . '.tmp', $fileName);
		
		WriteLog('ProcessNewComment: file_get_contents(' . $fileName . '):');
		WriteLog(file_get_contents($fileName));

		$hash = sha1_file($fileName);
		
		WriteLog('ProcessNewComment: $hash = ' . $hash);

		{ // create prefix subdirectories under txt/
			if (!file_exists($txtDir . substr($hash, 0, 2))) {
				mkdir($txtDir . substr($hash, 0, 2));
			}

			if (!file_exists($txtDir . substr($hash, 0, 2) . '/' . substr($hash, 2, 2))) {
				mkdir($txtDir . substr($hash, 0, 2) . '/' . substr($hash, 2, 2));
			}
		}

		{ // create prefix subdirectories under ./ (html/)
			if (!file_exists('./' .substr($hash, 0, 2))) {
				mkdir('./' . substr($hash, 0, 2));
			}

			if (!file_exists('./' . substr($hash, 0, 2) . '/' . substr($hash, 2, 2))) {
				mkdir('./' . substr($hash, 0, 2) . '/' . substr($hash, 2, 2));
			}
		}

		// generate path for new txt file
		$filePath = 
			$txtDir . 
			substr($hash, 0, 2) . 
			'/' . 
			substr($hash, 2, 2) . 
			'/' . 
			$hash . '.txt'
		;

		// generate path for new html file
		$fileHtmlPath = 
			'./' .
			substr($hash, 0, 2) . 
			'/' . 
			substr($hash, 2, 2) . 
			'/' . 
			$hash . '.html'
		;

		// generate path for client-side path to html file
		$fileUrlPath = 
			'/' .
			substr($hash, 0, 2) . 
			'/' . 
			substr($hash, 2, 2) . 
			'/' . 
			$hash . '.html'
		;

		// save new post to txt file
		file_put_contents($filePath, $comment);

		// escape comment for output as html
		$commentHtml =
			nl2br(
				str_replace(
					'  ',
					' &nbsp;',
					htmlspecialchars(
						wordwrap(
							trim($comment),
							80,
							' ',
							true
						),
						ENT_QUOTES|ENT_SUBSTITUTE,
						"UTF-8"
					)
				),
				0
			)
		;

		if (!file_exists($fileHtmlPath)) {
			$commentHtmlTemplate = GetTemplate('item_processing.template');
			$commentHtmlTemplate = str_replace('$commentHtml', $commentHtml, $commentHtmlTemplate);

			$themeName = trim(GetConfig('html/theme'));

			WriteLog('$themeName = ' . $themeName);

			$colorWindow = GetConfig($themeName . '/color_window');
			$colorText = GetConfig($themeName . '/color_text');

			WriteLog('$colorText = ' . $colorText);
			WriteLog('$colorWindow = ' . $colorWindow);

			$commentHtmlTemplate = str_replace('$colorWindow', $colorWindow, $commentHtmlTemplate);
			$commentHtmlTemplate = str_replace('$colorText', $colorText, $commentHtmlTemplate);

			file_put_contents($fileHtmlPath, $commentHtmlTemplate);
		}

		if (isset($_SERVER['HTTP_REFERER']) && $_SERVER['HTTP_REFERER']) {
			$referer = $_SERVER['HTTP_REFERER'];

			// #todo uncomment this once this script is working
	//		header('Location: ' . $referer);
		} else {
			// #todo uncomment this once this script is working
	//		header('Location: /write.html');
		}
		
		WriteLog(' $fileUrlPath = ' . $fileUrlPath);
	}

	if ($pwd) {
		WriteLog(`cd $pwd`);
	}
	
	return $fileUrlPath;
}

$fileUrlPath = '';

if ($_POST) {
	WriteLog('$_POST');
	if (isset($_POST['comment'])) {
		$comment = $_POST['comment'];
	}
	
	if (isset($_POST['replyto']) && $_POST['replyto']) {
		$replyTo = $_POST['replyto']; 
		$replyToToken = '>>' . $replyTo;

		if (!preg_match('/\>\>' . $replyTo . '/', $comment)) {
			$comment .= "\n\n" . $replyToToken;
		}
	}

	if ($comment) {
		$fileUrlPath = ProcessNewComment($comment);
	}
}

if ($_GET) {
	WriteLog('$_GET');

	WriteLog(print_r($_GET, 1));

	if (isset($_GET['comment'])) {
		$comment = $_GET['comment'];
	} else {
		if (isset($_GET['txtClock'])) {
			$comment = $_GET['txtClock'];
		} else {
			if (isset($_GET['?comment'])) {
				$comment = $_GET['?comment'];
			} else {
				if (isset($_GET['?txtClock'])) {
					$comment = $_GET['?txtClock'];
				} else {
					$comment = '';
				}
			}
		}
	}
	
	if (isset($_GET['replyto']) && $_GET['replyto']) {
		$replyTo = $_GET['replyto']; 
		$replyToToken = '>>' . $replyTo;

		if (!preg_match('/\>\>' . $replyTo . '/', $comment)) {
			$comment .= "\n\n" . $replyToToken;
		}
	}

	if ($comment) {
		$fileUrlPath = ProcessNewComment($comment);
	}
}

function GetConfig($configKey) {
	$configDir = '../config/';
	$defaultDir = '../default/';

	if (file_exists($configDir . $configKey)) {
		$configValue = file_get_contents($configDir . $configKey);
	} elseif (file_exists($defaultDir . $configKey)) {
		copy ($defaultDir . $configKey, $configDir . $configKey);
		$configValue = file_get_contents($configDir . $configKey);
	} else {
		$configValue = '';
	}

	WriteLog('GetConfig("' . $configKey . '") = "' . $configValue . '")');

	return $configValue;
}

function GetTemplate($templateKey) {
	return GetConfig('template/' . $templateKey);
}

$html = file_get_contents('post.html');

if (isset($fileUrlPath) && $fileUrlPath) {
	if (file_exists('../config/template/php/just_posted.template')) {
		$postedMessage = file_get_contents('../config/template/php/just_posted.template');
	} elseif (file_exists('../default/template/php/just_posted.template')) {
		copy ('../default/template/php/just_posted.template', '../config/template/php/just_posted.template');
		$postedMessage = file_get_contents('../default/template/php/just_posted.template');
	} else {
		$postedMessage = '<a href="' . $fileUrlPath . '" class=beginner>See what you just posted.</a><br><br>';
	}

	$postedMessage = str_replace('$fileUrlPath', $fileUrlPath, $postedMessage); 
	
	$html = str_replace('<!-- submitted_text -->', $postedMessage, $html);
}

print($html);
