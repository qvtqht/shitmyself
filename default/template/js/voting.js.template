// == begin voting.js

function PingUrl(url) { // loads arbitrary url
// by creating an <img src=url> on the page
// it ain't pretty, but it's compatible
	var img = document.createElement('img');
	img.setAttribute("src", url);
	document.body.appendChild(img);	
	// todo get rid of image eventually
	// server-side shove an image into it as needed
}


//function OptionsDefault(token, privKeyObj) {
//	this.data = token;
//	this.privateKeys = [privKeyObj];
//}

function signVote(t, token) { // signs a vote from referenced vote button
// t = reference to calling button's 'this'
// token = full voting token, in the format vote/$fileHash/$ballotTime/$voteValue/$checksum
	if (document.getElementById) {
	// basic dumb feature check #todo make smarter feature check ;
	// needs better compatibility for older browsers
		var privkey = getPrivateKey();
		// get private key
	
		if (!privkey) {
		// if there is no private key, just do a basic unsigned vote;
			t.enabled = false;
			t.style.backgroundColor = '#408040'; //#todo
			t.style.color = '#408040'; //#todo
			t.style.borderRadius = '5pt'; //#todo
	
			if (PingUrl(t.href)) {
				// todo increment counter
			}
		} else {
		// there is a private key
			// first, change the button's appearance, for maximum responsiveness
			t.enabled = false;
			t.style.backgroundColor = '#8080c0'; //#todo
			t.style.color = '#8080c0';
			t.style.borderRadius = '5pt'; //#todo

			// load the private key into openpgp
			var privKeyObj = openpgp.key.readArmored(privkey).keys[0];

			var options;

//			options = OptionsDefault();

			// set the options
			options = {
				data: token, // input as String (or Uint8Array)
				privateKeys: [privKeyObj] // for signing
			};
	
			openpgp.config.show_version = false;
			openpgp.config.show_comment = false;

			// sign the voting token and send to post.html when finished
			openpgp.sign(options).then(function(signed) {
				var url = '/post.html?comment=' + encodeURIComponent(signed.data);
	
				if (PingUrl(url)) {
					// todo incrememnt counter
				}
			});
		}
	}

	// return false so that calling link does not go to its target
	return false;
}

// == end voting.js