// == begin fresh.js
var freshClient;
var timeoutFresh;

function freshCallback() { // callback for requesting HEAD for current page
    //alert('DEBUG: freshCallback() begins');

	var clock = document.getElementById('txtClock');

	//alert('DEBUG: freshCallback() clock = ' + clock);

	//alert('DEBUG: freshCallback() this.readyState = ' + this.readyState);

//	if (1 || this.readyState == this.HEADERS_RECEIVED) { // headers received -- what we've been waiting for
	if (
		this.readyState == this.HEADERS_RECEIVED ||
		this.status == 200
	) { // headers received -- what we've been waiting for
		// document.title = 'DEBUG: callback received 200';

	    //alert('DEBUG: freshCallback() this.readyState == this.HEADERS_RECEIVED');

		var eTag = freshClient.getResponseHeader("ETag"); // etag header contains page 'fingerprint'

		//alert('DEBUG: eTag = ' + eTag);

		if (eTag) { // if eTag header has a value
			if (window.myOwnETag) {
				var freshETag = freshClient.getResponseHeader("ETag"); // ETag header contains page 'fingerprint'

				if (freshETag != window.myOwnETag) {
					//alert('DEBUG: perhaps something changed?');
				} else {

				}
			} else {
				if (window.lastEtag) { // if we already saved one
					if (eTag == window.lastEtag) { // if it's equal to the one we saved last time
						// still fresh, no change
					} else {
						// etag was different from last one we saw
						document.title = 'DEBUG: perhaps something changed?';
					}

					//window.lastEtag = eTag;
				} else {
					window.lastEtag = eTag;
				}
			}
		}
	}

	//alert('DEBUG: freshCallback() ends');
}

function CheckIfFresh() {
	var mypath = window.mypath;

	if (!mypath) {
		mypath = window.location;
		window.mypath = mypath;
	}

	freshClient = new XMLHttpRequest();
	//freshClient.open("HEAD", mypath + '?' + new Date().getTime(), true);
	freshClient.open("HEAD", mypath, true);
	freshClient.setRequestHeader('Cache-Control', 'no-cache');
	freshClient.onreadystatechange = freshCallback;

	freshClient.send();
}

var intFreshTimeout = 0;

function AmIFresh() {
	//alert('DEBUG: AmIFresh: begin');

	if (intFreshTimeout < 0) {
		//alert('DEBUG: AmIFresh: intFreshTimeout < 0; return');
		return;
	}

	if (timeoutFresh) {
		//alert('DEBUG: AmIFresh: clearTimeout(timeoutFresh)');
		clearTimeout(timeoutFresh);
	}

	if (window.XMLHttpRequest) {
		//alert('DEBUG: AmIFresh: window.XMLHttpRequest feature check passed');

		if (!intFreshTimeout) {
			intFreshTimeout = 5000;
		} else {
			CheckIfFresh();
		}

		intFreshTimeout = intFreshTimeout * 2;
		
		if (50000 < intFreshTimeout) {
			intFreshTimeout = 50000;
		} 

		//alert('DEBUG: AmIFresh: setting timeout to ' + intFreshTimeout);

		timeoutFresh = setTimeout('AmIFresh()', intFreshTimeout);
	}
}

if (window.GetPrefs) {
	var needNotify = GetPrefs('notify_on_change') || 0;
	if (needNotify == 1) { // check value of want_to_vote preference
		AmIFresh();
	}
}

//alert('DEBUG: fresh.js');

// == end fresh.js