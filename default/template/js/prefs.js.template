var showAdvancedLastAction = '';
var showBeginnerLastAction = '';

function ShowAdvanced(force) { // show or hide controls based on preferences
//handles class=advanced based on 'show_advanced' preference
//handles class=beginner based on 'beginner' preference
//force parameter
// 1 = does not re-do setTimeout
// 0 = previous preference values are remembered, and are not re-done

	if (window.localStorage) {
		var displayValue = 'none'; // hide by default
		if (GetPrefs('show_advanced') == 1) { // check value of show_advanced preference
			displayValue = 'initial'; // display
		}

		if (force || showAdvancedLastAction != displayValue) {
			// thank you stackoverflow
			var divsToHide = document.getElementsByClassName("advanced"); //divsToHide is an array
			for (var i = 0; i < divsToHide.length; i++) {
				//divsToHide[i].style.visibility = "hidden"; // or
				if (displayValue == 'initial' && divsToHide[i].nodeName == 'P') {
					divsToHide[i].style.display = 'block'; // depending on what you're doing
				} else if (displayValue == 'initial' && divsToShow[i].nodeName == 'TR') {
					divsToShow[i].style.display = 'table-row'; // depending on what you're doing
				} else if (displayValue == 'initial' && (divsToHide[i].nodeName == 'TH' || divsToHide[i].nodeName == 'TD')) {
					if (divsToHide[i].innerHTML != '') {
						divsToHide[i].style.display = 'table-cell'; // depending on what you're doing
					} else {
						divsToHide[i].style.display = 'none'; // depending on what you're doing
					}
				} else {
					divsToHide[i].style.display = displayValue; // depending on what you're doing
				}
			}
			showAdvancedLastAction = displayValue;
		}

		displayValue = 'initial'; // show by default
		if (GetPrefs('beginner') == 0) { // check value of beginner preference
			displayValue = 'none';
		}

		var bgColor = 'initial';
		if (GetPrefs('beginner_highlight') == 1) { // check value of beginner preference
			bgColor = '#ffffc0'; // beginner_highlight
		}

		if (force || showBeginnerLastAction != displayValue) {
			var divsToShow = document.getElementsByClassName('beginner');
			for (var i = 0; i < divsToShow.length; i++) {
				divsToShow[i].style.display = displayValue;

				if (displayValue == 'initial' && divsToShow[i].nodeName == 'P') {
					divsToShow[i].style.display = 'block'; // depending on what you're doing
				} else if (displayValue == 'initial' && divsToShow[i].nodeName == 'TR') {
					divsToShow[i].style.display = 'table-row'; // depending on what you're doing
				} else if (displayValue == 'initial' && (divsToShow[i].nodeName == 'TH' || divsToShow[i].nodeName == 'TD')) {
//					divsToShow[i].style.display = 'table-cell'; // depending on what you're doing
					if (divsToShow[i].innerHTML != '') {
						divsToShow[i].style.display = 'table-cell'; // depending on what you're doing
					} else {
						divsToShow[i].style.display = 'none'; // depending on what you're doing
					}
				} else {
					divsToShow[i].style.display = displayValue; // depending on what you're doing
				}

				divsToShow[i].style.backgroundColor = bgColor;
			}
			showBeginnerLastAction = displayValue;
		}
	}

	if (!force) {
		setTimeout(ShowAdvanced, 3000);
	}
}

function PrefsTest() { //sets an item into localstorage prefs
	SetPrefs('test', '123'); //set key 'test' to value '123

	//alert('tst');

	var a = GetPrefs('test'); // get value of key 'test'

	alert(a); // display alert with value of key

	return 0; // done
}

function GetPrefs(prefKey) { // get prefs value from localstorage
	if (window.localStorage) {
		var value = localStorage.getItem('p_'+prefKey);

		if (!value) {
			if (prefKey == 'beginner') {
				value = 1;
			}
		}

		return value;
	}
//	var json = localStorage.getItem('preferencesJson');
//
//	var objJson;
//
//	if (json) {
//		objJson = JSON.parse($json);
//	} else {
//		objJson = Object();
//	}
//
//	console.log(objJson);
//
//	return;
}


function SetPrefs(prefKey, prefValue) { // set prefs key prefKey to value prefValue
//	var json = localStorage.getItem('preferencesJson');
//
//	var objJson;
//
//	if (json) {
//		objJson = JSON.parse($json);
//	} else {
//		objJson = Object();
//	}
//
//	console.log(objJson);
//
//
//
////	var prefsJson = objJson.stringify();
//	var prefsJson = '';

//	localStorage.setItem('preferencesJson', prefsJson);
	if (window.localStorage) {
		localStorage.setItem('p_'+prefKey, prefValue); // set to local storage with p_ prefix
	}
}

function showHideCheckbox(id, ths, prefName) {
	var pane = document.getElementById(id);
	if (pane) {
   	pane.style.display=(ths.checked ? 'block' : 'none')
	}

   SetPrefs(prefName, (ths.checked ? 1 : 0));

   if (prefName == 'show_advanced' || prefName == 'beginner' || prefName == 'beginner_highlight') {
   	ShowAdvanced(1);
   }
}

if (pane = document.getElementById('curIdAdv') && GetPrefs('show_advanced') == 1) {
	document.getElementById('curIdAdvC').checked = 1;
	showHideCheckbox('curIdAdv', document.getElementById('curIdAdvC'), 'show_advanced');
}

if (pane = document.getElementById('curIdAdv') && GetPrefs('beginner') == 1) {
	document.getElementById('beginnerC').checked = 1;
}

if (pane = document.getElementById('curIdAdv') && GetPrefs('beginner_highlight') == 1) {
	document.getElementById('beginnerHighlight').checked = 1;
}

if (pane = document.getElementById('creaIdAdv') && GetPrefs('show_advanced') == 1) {
	document.getElementById('creaIdAdvC').checked = 1;
	showHideCheckbox('creaIdAdv', document.getElementById('creaIdAdvC'), 'show_advanced');
}

ShowAdvanced(0); // call ShowAdvanced

