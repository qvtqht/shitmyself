When declaring a function, I try to put a space after its name.

 This makes it easy to find when doing a global search.

 I also put the argument names, if they're not in the function definition already.

 After that, I follow with a very short description of the function.

 Examples:

 sub SomePerlFunction { # $firstArgument, $argumentTheSecond ; five-word description of function
	WriteLog('SomePerlFunction() begins');

 	my $firstArgument = shift;
	my $argumentTheSecond = shift;

 	WriteLog("SomePerlFunction($firstArgument, $argumentTheSecond)");
} # SomePerlFunction

 function SomePhpFunction ($firstArgument, $argumentTheSecond) { // this does the same thing but in php
	WriteLog("SomePhpFunction($firstArgument, $argumentTheSecond)");
	// some stuff but in php
} // SomePhpFunction

 function SomeJavaScriptFunction (firstArgument, argumentTheSecond) { // this is in javascripts
	//alert('DEBUG: SomeJavaScriptFunction('+firstArgument+', '+argumentTheSecond+')');
	// see localdev.txt for information on how JavaScript debugging works
} // SomeJavaScriptFunction

 All of this is tuned for global search, so that I can press Ctrl+Shift+F, type in "SomeFunction ", and immediately see this information.

 The same function may be written in multiple languages, and I'll see all of them in one search.

 Of course, in order for this to work well, when *calling* a function, I must avoid putting a space after the function name.

 Examples of calling a function:

 SomePerlFunction('foo', 'bar'); # perl
SomePhpFunction('foo', 'bar'); // php
SomeJavaScriptFunction('foo', 'bar'); // javascript

 This also applies to writing debug messages. I avoid putting a space after the function name there, too.

 Examples, also seen above:

 WriteLog("SomePerlFunction($firstArgument, $argumentTheSecond)");
WriteLog("SomePhpFunction($firstArgument, $argumentTheSecond)");
//alert('DEBUG: SomeJavaScriptFunction('+firstArgument+', '+argumentTheSecond+')');

